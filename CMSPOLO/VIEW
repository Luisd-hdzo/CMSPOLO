import tkinter as tk
from tkinter import ttk, messagebox

class AppView:
    def __init__(self, root, controller):
        self.controller = controller
        root.title("Gestión de Relaciones")

        # Frame para añadir personas
        frame_persona = ttk.LabelFrame(root, text="Añadir Persona")
        frame_persona.grid(row=0, column=0, padx=10, pady=10)

        label_nombre = ttk.Label(frame_persona, text="Nombre:")
        label_nombre.grid(row=0, column=0, padx=5, pady=5)
        self.entry_nombre = ttk.Entry(frame_persona)
        self.entry_nombre.grid(row=0, column=1, padx=5, pady=5)
        btn_agregar_persona = ttk.Button(frame_persona, text="Agregar", command=self.agregar_persona)
        btn_agregar_persona.grid(row=0, column=2, padx=5, pady=5)

        # Frame para añadir eventos
        frame_evento = ttk.LabelFrame(root, text="Añadir Evento")
        frame_evento.grid(row=1, column=0, padx=10, pady=10)

        label_evento = ttk.Label(frame_evento, text="Nombre del Evento:")
        label_evento.grid(row=0, column=0, padx=5, pady=5)
        self.entry_evento = ttk.Entry(frame_evento)
        self.entry_evento.grid(row=0, column=1, padx=5, pady=5)
        label_organizador = ttk.Label(frame_evento, text="Organizador:")
        label_organizador.grid(row=1, column=0, padx=5, pady=5)
        self.entry_organizador = ttk.Entry(frame_evento)
        self.entry_organizador.grid(row=1, column=1, padx=5, pady=5)
        btn_agregar_evento = ttk.Button(frame_evento, text="Agregar", command=self.agregar_evento)
        btn_agregar_evento.grid(row=2, column=0, columnspan=2, padx=5, pady=5)

        # Frame para añadir relaciones
        frame_relacion = ttk.LabelFrame(root, text="Añadir Relación")
        frame_relacion.grid(row=2, column=0, padx=10, pady=10)

        label_persona1 = ttk.Label(frame_relacion, text="Persona 1:")
        label_persona1.grid(row=0, column=0, padx=5, pady=5)
        self.entry_persona1 = ttk.Entry(frame_relacion)
        self.entry_persona1.grid(row=0, column=1, padx=5, pady=5)
        label_persona2 = ttk.Label(frame_relacion, text="Persona 2:")
        label_persona2.grid(row=1, column=0, padx=5, pady=5)
        self.entry_persona2 = ttk.Entry(frame_relacion)
        self.entry_persona2.grid(row=1, column=1, padx=5, pady=5)
        btn_agregar_relacion = ttk.Button(frame_relacion, text="Agregar", command=self.agregar_relacion)
        btn_agregar_relacion.grid(row=2, column=0, columnspan=2, padx=5, pady=5)

        # Frame para buscar relaciones y eventos
        frame_buscar = ttk.LabelFrame(root, text="Buscar")
        frame_buscar.grid(row=3, column=0, padx=10, pady=10)

        label_buscar = ttk.Label(frame_buscar, text="Nombre:")
        label_buscar.grid(row=0, column=0, padx=5, pady=5)
        self.entry_buscar = ttk.Entry(frame_buscar)
        self.entry_buscar.grid(row=0, column=1, padx=5, pady=5)
        btn_buscar = ttk.Button(frame_buscar, text="Buscar", command=self.buscar)
        btn_buscar.grid(row=0, column=2, padx=5, pady=5)

    def agregar_persona(self):
        nombre = self.entry_nombre.get()
        if nombre:
            self.controller.agregar_persona(nombre)
            messagebox.showinfo("Éxito", f"Persona {nombre} añadida.")
            self.entry_nombre.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "El nombre no puede estar vacío.")

    def agregar_evento(self):
        nombre_evento = self.entry_evento.get()
        nombre_organizador = self.entry_organizador.get()
        if nombre_evento and nombre_organizador:
            self.controller.agregar_evento(nombre_evento, nombre_organizador)
            messagebox.showinfo("Éxito", f"Evento {nombre_evento} añadido.")
            self.entry_evento.delete(0, tk.END)
            self.entry_organizador.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "Debe proporcionar un nombre de evento y un organizador válido.")

    def agregar_relacion(self):
        nombre1 = self.entry_persona1.get()
        nombre2 = self.entry_persona2.get()
        if nombre1 and nombre2:
            self.controller.agregar_relacion(nombre1, nombre2)
            messagebox.showinfo("Éxito", f"Relación añadida entre {nombre1} y {nombre2}.")
            self.entry_persona1.delete(0, tk.END)
            self.entry_persona2.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "Debe proporcionar nombres válidos para ambas personas.")

    def buscar(self):
        nombre = self.entry_buscar.get()
        resultado = self.controller.buscar_relaciones(nombre)
        if resultado:
            relaciones_text = ", ".join(resultado["relaciones"])
            eventos_text = ", ".join(resultado["eventos"])
            messagebox.showinfo("Resultado", f"{nombre} tiene relaciones con: {relaciones_text} y asiste a: {eventos_text}.")
        else:
            messagebox.showinfo("Resultado", "Persona no encontrada.")
